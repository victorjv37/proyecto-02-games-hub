import"./main-DHHuibfa.js";class a{constructor(t){this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.gridSize=20,this.tileSize=this.canvas.width/this.gridSize,this.reset(),this.loadScores()}reset(){this.snake=[{x:10,y:10},{x:9,y:10},{x:8,y:10}],this.direction="right",this.nextDirection="right",this.food=this.generateFood(),this.score=0,this.gameLoop=null,this.isPaused=!1,this.isGameOver=!1}loadScores(){const t=localStorage.getItem("snakeScores");this.scores=t?JSON.parse(t):{bestScore:0}}saveScores(){localStorage.setItem("snakeScores",JSON.stringify(this.scores))}generateFood(){let t;do t={x:Math.floor(Math.random()*this.gridSize),y:Math.floor(Math.random()*this.gridSize)};while(this.snake.some(s=>s.x===t.x&&s.y===t.y));return t}start(){this.gameLoop||(this.gameLoop=setInterval(()=>this.update(),150),this.draw())}pause(){this.isPaused=!0}resume(){this.isPaused=!1}update(){if(this.isPaused||this.isGameOver)return;this.direction=this.nextDirection;const t={...this.snake[0]};switch(this.direction){case"up":t.y--;break;case"down":t.y++;break;case"left":t.x--;break;case"right":t.x++;break}if(this.checkCollision(t)){this.gameOver();return}this.snake.unshift(t),t.x===this.food.x&&t.y===this.food.y?(this.score+=10,this.food=this.generateFood(),this.onScoreUpdate&&this.onScoreUpdate()):this.snake.pop(),this.draw()}checkCollision(t){return t.x<0||t.x>=this.gridSize||t.y<0||t.y>=this.gridSize?!0:this.snake.some(s=>s.x===t.x&&s.y===t.y)}draw(){this.ctx.fillStyle="#1a1a1a",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height),this.ctx.fillStyle="#646cff",this.snake.forEach((t,s)=>{this.ctx.fillRect(t.x*this.tileSize,t.y*this.tileSize,this.tileSize-1,this.tileSize-1)}),this.ctx.fillStyle="#ff4444",this.ctx.fillRect(this.food.x*this.tileSize,this.food.y*this.tileSize,this.tileSize-1,this.tileSize-1)}changeDirection(t){({up:"down",down:"up",left:"right",right:"left"})[t]!==this.direction&&(this.nextDirection=t)}gameOver(){this.isGameOver=!0,clearInterval(this.gameLoop),this.gameLoop=null,this.score>this.scores.bestScore&&(this.scores.bestScore=this.score,this.saveScores()),this.onGameOver&&this.onGameOver(this.score)}}const e=new a("game-board"),n=document.getElementById("start-button"),o=document.getElementById("pause-button"),h=document.getElementById("restart-button"),c=document.getElementById("game-over"),d=document.getElementById("final-score"),l=document.getElementById("score"),u=document.getElementById("best-score"),g=document.getElementById("left-button"),m=document.getElementById("right-button"),f=document.getElementById("up-button"),S=document.getElementById("down-button");function r(){l.textContent=e.score,u.textContent=e.scores.bestScore}n.addEventListener("click",()=>{e.start(),n.disabled=!0});o.addEventListener("click",()=>{e.isPaused?(e.resume(),o.textContent="Pause"):(e.pause(),o.textContent="Resume")});h.addEventListener("click",()=>{e.reset(),c.classList.remove("visible"),n.disabled=!1,o.textContent="Pause"});g.addEventListener("click",()=>e.changeDirection("left"));m.addEventListener("click",()=>e.changeDirection("right"));f.addEventListener("click",()=>e.changeDirection("up"));S.addEventListener("click",()=>e.changeDirection("down"));document.addEventListener("keydown",i=>{switch(i.key){case"ArrowLeft":e.changeDirection("left");break;case"ArrowRight":e.changeDirection("right");break;case"ArrowUp":e.changeDirection("up");break;case"ArrowDown":e.changeDirection("down");break}});e.onGameOver=i=>{d.textContent=i,c.classList.add("visible"),n.disabled=!1,r()};e.onScoreUpdate=r;r();
